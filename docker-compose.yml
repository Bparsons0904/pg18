services:
  postgres:
    image: postgres:18beta3
    hostname: postgres-server
    container_name: postgres18
    restart: unless-stopped

    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C.UTF-8"
      TZ: "UTC"

    # Production-optimized command line parameters
    command: >
      postgres
      -c shared_buffers=2GB
      -c work_mem=32MB
      -c maintenance_work_mem=512MB
      -c effective_cache_size=3GB
      -c wal_buffers=32MB
      -c checkpoint_completion_target=0.9
      -c max_wal_size=2GB
      -c min_wal_size=512MB
      -c max_connections=100
      -c max_worker_processes=16
      -c max_parallel_workers=8
      -c max_parallel_workers_per_gather=4
      -c max_parallel_maintenance_workers=4
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c default_statistics_target=100
      -c cpu_tuple_cost=0.03
      -c log_statement=mod
      -c log_min_duration_statement=1000
      -c log_line_prefix='%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '
      -c shared_preload_libraries=pg_stat_statements
      -c track_activity_query_size=2048

    volumes:
      - ./data:/var/lib/postgresql
      - ./init:/docker-entrypoint-initdb.d

    ports:
      - "5432:5432"

    # Resource limits for safety
    deploy:
      resources:
        limits:
          memory: 4GB
        reservations:
          memory: 2GB

    networks:
      - postgres-network

    # Health check
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  postgres-network:
    driver: bridge
    name: postgres-network
    external: false
